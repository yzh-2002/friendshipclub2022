{"version":3,"sources":["index.js"],"names":[],"mappings":";;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"index.js","sourcesContent":["\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nvar helperPluginUtils = require('@babel/helper-plugin-utils');\n\nfunction shouldTransform(path) {\n  const {\n    node\n  } = path;\n  const functionId = node.id;\n  if (!functionId) return false;\n  const name = functionId.name;\n  const paramNameBinding = path.scope.getOwnBinding(name);\n\n  if (paramNameBinding === undefined) {\n    return false;\n  }\n\n  if (paramNameBinding.kind !== \"param\") {\n    return false;\n  }\n\n  if (paramNameBinding.identifier === paramNameBinding.path.node) {\n    return false;\n  }\n\n  return name;\n}\n\nvar index = helperPluginUtils.declare(api => {\n  api.assertVersion(\"^7.16.0\");\n  return {\n    name: \"plugin-bugfix-safari-id-destructuring-collision-in-function-expression\",\n    visitor: {\n      FunctionExpression(path) {\n        const name = shouldTransform(path);\n\n        if (name) {\n          const {\n            scope\n          } = path;\n          const newParamName = scope.generateUid(name);\n          scope.rename(name, newParamName);\n        }\n      }\n\n    }\n  };\n});\n\nexports.default = index;\n//# sourceMappingURL=index.js.map\n"]}