{"version":3,"sources":["index.js"],"names":[],"mappings":";;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"index.js","sourcesContent":["\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _helperPluginUtils = require(\"@babel/helper-plugin-utils\");\n\nvar _pluginSyntaxExportNamespaceFrom = require(\"@babel/plugin-syntax-export-namespace-from\");\n\nvar _core = require(\"@babel/core\");\n\nvar _default = (0, _helperPluginUtils.declare)(api => {\n  api.assertVersion(7);\n  return {\n    name: \"proposal-export-namespace-from\",\n    inherits: _pluginSyntaxExportNamespaceFrom.default,\n    visitor: {\n      ExportNamedDeclaration(path) {\n        var _exported$name;\n\n        const {\n          node,\n          scope\n        } = path;\n        const {\n          specifiers\n        } = node;\n        const index = _core.types.isExportDefaultSpecifier(specifiers[0]) ? 1 : 0;\n        if (!_core.types.isExportNamespaceSpecifier(specifiers[index])) return;\n        const nodes = [];\n\n        if (index === 1) {\n          nodes.push(_core.types.exportNamedDeclaration(null, [specifiers.shift()], node.source));\n        }\n\n        const specifier = specifiers.shift();\n        const {\n          exported\n        } = specifier;\n        const uid = scope.generateUidIdentifier((_exported$name = exported.name) != null ? _exported$name : exported.value);\n        nodes.push(_core.types.importDeclaration([_core.types.importNamespaceSpecifier(uid)], _core.types.cloneNode(node.source)), _core.types.exportNamedDeclaration(null, [_core.types.exportSpecifier(_core.types.cloneNode(uid), exported)]));\n\n        if (node.specifiers.length >= 1) {\n          nodes.push(node);\n        }\n\n        const [importDeclaration] = path.replaceWithMultiple(nodes);\n        path.scope.registerDeclaration(importDeclaration);\n      }\n\n    }\n  };\n});\n\nexports.default = _default;"]}