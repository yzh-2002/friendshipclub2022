{"version":3,"sources":["index.js"],"names":[],"mappings":";;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"index.js","sourcesContent":["\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.isTransparentExprWrapper = isTransparentExprWrapper;\nexports.skipTransparentExprWrapperNodes = skipTransparentExprWrapperNodes;\nexports.skipTransparentExprWrappers = skipTransparentExprWrappers;\n\nvar _t = require(\"@babel/types\");\n\nconst {\n  isParenthesizedExpression,\n  isTSAsExpression,\n  isTSNonNullExpression,\n  isTSTypeAssertion,\n  isTypeCastExpression\n} = _t;\n\nfunction isTransparentExprWrapper(node) {\n  return isTSAsExpression(node) || isTSTypeAssertion(node) || isTSNonNullExpression(node) || isTypeCastExpression(node) || isParenthesizedExpression(node);\n}\n\nfunction skipTransparentExprWrappers(path) {\n  while (isTransparentExprWrapper(path.node)) {\n    path = path.get(\"expression\");\n  }\n\n  return path;\n}\n\nfunction skipTransparentExprWrapperNodes(node) {\n  while (isTransparentExprWrapper(node)) {\n    node = node.expression;\n  }\n\n  return node;\n}"]}