{"version":3,"sources":["index.js"],"names":[],"mappings":";;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"index.js","sourcesContent":["/*!\n * has-values <https://github.com/jonschlinkert/has-values>\n *\n * Copyright (c) 2014-2015, 2017, Jon Schlinkert.\n * Released under the MIT License.\n */\n\n\n\nvar typeOf = require('kind-of');\nvar isNumber = require('is-number');\n\nmodule.exports = function hasValue(val) {\n  // is-number checks for NaN and other edge cases\n  if (isNumber(val)) {\n    return true;\n  }\n\n  switch (typeOf(val)) {\n    case 'null':\n    case 'boolean':\n    case 'function':\n      return true;\n    case 'string':\n    case 'arguments':\n      return val.length !== 0;\n    case 'error':\n      return val.message !== '';\n    case 'array':\n      var len = val.length;\n      if (len === 0) {\n        return false;\n      }\n      for (var i = 0; i < len; i++) {\n        if (hasValue(val[i])) {\n          return true;\n        }\n      }\n      return false;\n    case 'file':\n    case 'map':\n    case 'set':\n      return val.size !== 0;\n    case 'object':\n      var keys = Object.keys(val);\n      if (keys.length === 0) {\n        return false;\n      }\n      for (var i = 0; i < keys.length; i++) {\n        var key = keys[i];\n        if (hasValue(val[key])) {\n          return true;\n        }\n      }\n      return false;\n    default: {\n      return false;\n    }\n  }\n};\n"]}