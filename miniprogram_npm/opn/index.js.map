{"version":3,"sources":["index.js"],"names":[],"mappingsfile":"index.js","sourcesContent":["\nconst path = require('path');\nconst childProcess = require('child_process');\nconst isWsl = require('is-wsl');\n\nmodule.exports = (target, opts) => {\n\tif (typeof target !== 'string') {\n\t\treturn Promise.reject(new Error('Expected a `target`'));\n\t}\n\n\topts = Object.assign({wait: true}, opts);\n\n\tlet cmd;\n\tlet appArgs = [];\n\tlet args = [];\n\tconst cpOpts = {};\n\n\tif (Array.isArray(opts.app)) {\n\t\tappArgs = opts.app.slice(1);\n\t\topts.app = opts.app[0];\n\t}\n\n\tif (process.platform === 'darwin') {\n\t\tcmd = 'open';\n\n\t\tif (opts.wait) {\n\t\t\targs.push('-W');\n\t\t}\n\n\t\tif (opts.app) {\n\t\t\targs.push('-a', opts.app);\n\t\t}\n\t} else if (process.platform === 'win32' || isWsl) {\n\t\tcmd = 'cmd' + (isWsl ? '.exe' : '');\n\t\targs.push('/c', 'start', '\"\"', '/b');\n\t\ttarget = target.replace(/&/g, '^&');\n\n\t\tif (opts.wait) {\n\t\t\targs.push('/wait');\n\t\t}\n\n\t\tif (opts.app) {\n\t\t\targs.push(opts.app);\n\t\t}\n\n\t\tif (appArgs.length > 0) {\n\t\t\targs = args.concat(appArgs);\n\t\t}\n\t} else {\n\t\tif (opts.app) {\n\t\t\tcmd = opts.app;\n\t\t} else {\n\t\t\tconst useSystemXdgOpen = process.versions.electron || process.platform === 'android';\n\t\t\tcmd = useSystemXdgOpen ? 'xdg-open' : path.join(__dirname, 'xdg-open');\n\t\t}\n\n\t\tif (appArgs.length > 0) {\n\t\t\targs = args.concat(appArgs);\n\t\t}\n\n\t\tif (!opts.wait) {\n\t\t\t// `xdg-open` will block the process unless\n\t\t\t// stdio is ignored and it's detached from the parent\n\t\t\t// even if it's unref'd\n\t\t\tcpOpts.stdio = 'ignore';\n\t\t\tcpOpts.detached = true;\n\t\t}\n\t}\n\n\targs.push(target);\n\n\tif (process.platform === 'darwin' && appArgs.length > 0) {\n\t\targs.push('--args');\n\t\targs = args.concat(appArgs);\n\t}\n\n\tconst cp = childProcess.spawn(cmd, args, cpOpts);\n\n\tif (opts.wait) {\n\t\treturn new Promise((resolve, reject) => {\n\t\t\tcp.once('error', reject);\n\n\t\t\tcp.once('close', code => {\n\t\t\t\tif (code > 0) {\n\t\t\t\t\treject(new Error('Exited with code ' + code));\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tresolve(cp);\n\t\t\t});\n\t\t});\n\t}\n\n\tcp.unref();\n\n\treturn Promise.resolve(cp);\n};\n"]}