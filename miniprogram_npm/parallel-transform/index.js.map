{"version":3,"sources":["index.js"],"names":[],"mappingsfile":"index.js","sourcesContent":["var Transform = require('readable-stream').Transform;\nvar inherits = require('inherits');\nvar cyclist = require('cyclist');\nvar util = require('util');\n\nvar ParallelTransform = function(maxParallel, opts, ontransform) {\n\tif (!(this instanceof ParallelTransform)) return new ParallelTransform(maxParallel, opts, ontransform);\n\n\tif (typeof maxParallel === 'function') {\n\t\tontransform = maxParallel;\n\t\topts = null;\n\t\tmaxParallel = 1;\n\t}\n\tif (typeof opts === 'function') {\n\t\tontransform = opts;\n\t\topts = null;\n\t}\n\n\tif (!opts) opts = {};\n\tif (!opts.highWaterMark) opts.highWaterMark = Math.max(maxParallel, 16);\n\tif (opts.objectMode !== false) opts.objectMode = true;\n\n\tTransform.call(this, opts);\n\n\tthis._maxParallel = maxParallel;\n\tthis._ontransform = ontransform;\n\tthis._destroyed = false;\n\tthis._flushed = false;\n\tthis._ordered = opts.ordered !== false;\n\tthis._buffer = this._ordered ? cyclist(maxParallel) : [];\n\tthis._top = 0;\n\tthis._bottom = 0;\n\tthis._ondrain = null;\n};\n\ninherits(ParallelTransform, Transform);\n\nParallelTransform.prototype.destroy = function() {\n\tif (this._destroyed) return;\n\tthis._destroyed = true;\n\tthis.emit('close');\n};\n\nParallelTransform.prototype._transform = function(chunk, enc, callback) {\n\tvar self = this;\n\tvar pos = this._top++;\n\n\tthis._ontransform(chunk, function(err, data) {\n\t\tif (self._destroyed) return;\n\t\tif (err) {\n\t\t\tself.emit('error', err);\n\t\t\tself.push(null);\n\t\t\tself.destroy();\n\t\t\treturn;\n\t\t}\n\t\tif (self._ordered) {\n\t\t\tself._buffer.put(pos, (data === undefined || data === null) ? null : data);\n\t\t}\n\t\telse {\n\t\t\tself._buffer.push(data);\n\t\t}\n\t\tself._drain();\n\t});\n\n\tif (this._top - this._bottom < this._maxParallel) return callback();\n\tthis._ondrain = callback;\n};\n\nParallelTransform.prototype._flush = function(callback) {\n\tthis._flushed = true;\n\tthis._ondrain = callback;\n\tthis._drain();\n};\n\nParallelTransform.prototype._drain = function() {\n\tif (this._ordered) {\n\t\twhile (this._buffer.get(this._bottom) !== undefined) {\n\t\t\tvar data = this._buffer.del(this._bottom++);\n\t\t\tif (data === null) continue;\n\t\t\tthis.push(data);\n\t\t}\n\t}\n\telse {\n\t\twhile (this._buffer.length > 0) {\n\t\t\tvar data =  this._buffer.pop();\n\t\t\tthis._bottom++;\n\t\t\tif (data === null) continue;\n\t\t\tthis.push(data);\n\t\t}\n\t}\n\n\n\tif (!this._drained() || !this._ondrain) return;\n\n\tvar ondrain = this._ondrain;\n\tthis._ondrain = null;\n\tondrain();\n};\n\nParallelTransform.prototype._drained = function() {\n\tvar diff = this._top - this._bottom;\n\treturn this._flushed ? !diff : diff < this._maxParallel;\n};\n\nmodule.exports = ParallelTransform;\n"]}